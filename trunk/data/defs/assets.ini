# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Available assets in the game are defined here
# Note that "assets" refers to both units and buildings,
# and they are defined the same way.
#
# NOTE: I suggest that we keep the section names (which are id:s / tag:s
# to identify given definition) as follows:
#
# values   1..99  for asset definitions
#        101..    for radar defs
#        201..    for moving defs
#        301..    for projectile defs
#        401..    for builder defs
#        501..    for resourcer defs
#
# agreed, ranges are totally overkill, but the point is to keep it "simple",
# and 10 slots for assets is not enough, 20 would not be so intuitive.. :)
#
# $Revision$
# $Date$
# $Id$
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

#
# Assets listend here are loaded to the game
#
[def declarations]
declared assets[] = 1
declared assets[] = 2
declared assets[] = 51


#
# Detailed asset definitions below
# Section name as asset id
#

; ===== values and ranges =====
;
; asset name
;   string
;   name for the asset to display in ui
;
;
; asset description
;   string
;   brief descrition, possibly tooltip, in ui?
;
; asset concrete type
;   int
;   1 - unit
;   2 - building
;
; asset max hitpoints
;   int
;   maximum hitpoints, needed to reach before activation
;
; asset width
; asset height
;   int
;   height is ignored for unit-type of assets (since they are rectangular)
;    
; asset destruction time
;   float
;   seconds to be in destroyed-state before object delection and possible
;   explosion etc (TODO) event
;   atm this has no function =P
;
;
; asset construction cost ore
; asset constrcution cost energy
;   int
;   price of the unit when it's built
;
; asset idle energy consumption
;   int
;   how much does the unit consume energy by default
;   note that some actions may have their own power consumptions when active
;
; asset grid exit point x
; asset grid exit point y
;   int
;   only affective on buildings
;   terrain grid tile points x and y in the building's area that acts as the
;   passable exit-point from buildings that take units inside them. note that
;   this defines the center of the exit point. width of the point is defined
;   by the largest unit that is buildable by the player, or by the building's
;   size.
;   agreed, this quite a hax ;) better plans are welcome
;
;
; asset XXX tag
;   int
;   id for components attached to asset. 0 for no component.
;   the value is a section name for the definition to use with the asset.
;   defs for each of these are in their own .ini-files.
;
; currently available components are:
;   radar       101..   ability to spot enemy untis autonomously, clear fog and mark territory
;   moving      201..   only unit can have, makes it possibly to change position, doh
;   projectile  301..   things that can cast damage, launched by common weapon
;   builder     401..   for building new assets or repairing them
;   resourcer   501..   resource; storing, mining, transporting...
;

#
# Units
#

[1]
asset name = small car
asset description = cheap and crappy vehicle
asset concrete type = 1
asset max hitpoints = 20
asset width = 3
asset height = 3
asset destruction time = 0
asset idle energy consumption = 2
asset construction cost ore = 2
asset constrcution cost energy = 2
asset grid exit point x = 0
asset grid exit point y = 0
# tags, meaning components (definitions) attached
asset radar tag = 101
asset moving tag = 201
asset projectile tag = 301
asset builder tag = 0
asset resourcer tag = 0


[2]
asset name = super tank
asset description = possibly the meanest machine in the universe
asset concrete type = 1
asset max hitpoints = 200
asset width = 6
asset height = 6
asset destruction time = 0
asset idle energy consumption = 10
asset construction cost ore = 10
asset constrcution cost energy = 10
asset grid exit point x = 0
asset grid exit point y = 0
# tags, meaning components (definitions) attached
asset radar tag = 101
asset moving tag = 202
asset projectile tag = 301
asset builder tag = 0
asset resourcer tag = 0

#
# Buildings
#

[51]
asset name = factory building
asset description = example of the definition of building
asset concrete type = 2
asset max hitpoints = 2000
asset width = 12
asset height = 12
asset destruction time = 0
asset construction cost ore = 10
asset constrcution cost energy = 10
asset grid exit point x = 8
asset grid exit point y = 0
# tags, meaning components (definitions) attached
asset radar tag = 101
asset moving tag = 0
asset projectile tag = 0
asset builder tag = 401
asset resourcer tag = 501
